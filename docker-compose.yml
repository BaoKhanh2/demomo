version: "3.8"
services:
  kafka:
    image: docker.io/bitnami/kafka:4.0
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - backend

  discovery-server:
    image: embeddium/discovery:v1.0.0
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - EUREKA_CLIENT_REGISTERWITHEUREKA=false
      - EUREKA_CLIENT_FETCHREGISTRY=false
      - EUREKA_SERVER_ENABLESELFPRESERVATION=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  user-service:
    image: embeddium/user:v1.0.4
    container_name: user-service
    ports:
      - "8070:8070"
    depends_on:
      discovery-server:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8070/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  file-service:
    image: embeddium/file:v1.0.4
    container_name: file-service
    ports:
      - "8050:8050"
    depends_on:
      discovery-server:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8050/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  inventory-service:
    image: embeddium/inventory:v1.0.1
    container_name: inventory-service
    ports:
      - "8040:8040"
    depends_on:
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8040/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
  
  product-service:
    image: embeddium/product:v1.0.3
    container_name: product-service
    ports:
      - "8060:8060"
    depends_on:
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8060/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  api-gateway:
    image: embeddium/gateway:v1.0.5
    container_name: api-gateway
    ports:
      - "8000:8000"
    depends_on:
      user-service:
        condition: service_healthy
      inventory-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
      file-service:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  kafka_data:
    driver: local